//rst
b_d_0000_0000_xxxx
8_f_0000_0000_xxxx //idle
//push
8_7_0002_0002_0000
8_f_0000_0002_0000 //idle
//push 2
8_7_0004_0004_0002
8_f_0000_0004_0002 //idle
//push 3
8_7_000a_000a_0004
8_f_0000_000a_0004 //idle
//pop
8_b_0000_0004_0002
8_f_0000_0004_0002 //idle
//add
8_d_0000_0000_0000
8_f_0000_0006_0000 //idle
//push 4
8_7_0004_0004_0006
8_f_0000_0004_0006 //idle
//sub
8_e_0000_0000_0000
8_f_0000_fffe_0000 //idle
//push 5
8_7_0003_0003_fffe
8_f_0000_0003_fffe //idle
//sll
9_b_0000_0000_0000
8_f_0000_fff0_0000 //idle
//push 6
8_7_0002_0002_fff0
8_f_0000_0002_fff0 //idle
//srl
9_d_0000_0000_0000
8_f_0000_fffc_0000 //idle
//push 7
8_7_0008_0008_fffc
8_f_0000_0008_fffc //idle
//multu
9_7_0000_0000_0000
8_f_0000_ffe0_0000 //idle
//push 8
8_7_0005_0005_ffe0
8_f_0000_0005_ffe0 //idle
//slt
9_e_0000_0000_0000
8_f_0000_0000_0000 //idle
//push 9
8_7_0001_0001_0000
8_f_0000_0001_0000 //idle
//AND
a_7_0000_0000_0000
8_f_0000_0000_0000 //idle
//push 10
8_7_0001_0001_0000
8_f_0000_0001_0000 //idle
//OR
a_b_0000_0001_0000
8_f_0000_0001_0000 //idle
//push 11
8_7_0001_0001_0001
8_f_0000_0001_0001 //idle
//NOR
a_d_0000_0000_0000
8_f_0000_0001_0000 //idle
//push 12
8_7_0000_0000_0001
8_f_0000_0000_0001 //idle
//XOR
a_e_0000_0000_0000
8_f_0000_fffe_0000 //idle
//pop
8_b_0000_0000_0000
8_f_0000_0000_0000 //idle
//push 13
8_7_0006_0006_0000
8_f_0000_0006_0000 //idle
//push 14
8_7_0009_0009_0006
8_f_0000_0009_0006 //idle
//reverse
c_7_0000_0000_0009
8_f_0000_0000_0009 //idle
//pop
8_b_0000_0009_0006
